// Code generated by protoc-gen-go. DO NOT EDIT.
// source: control.proto

/*
Package control is a generated protocol buffer package.

It is generated from these files:
	control.proto
	service.proto

It has these top-level messages:
	Radiator
	Schedule
	Zone
	GetZonesRequest
	GetZonesReply
	GetZoneStatusRequest
	GetZoneStatusReply
	SetZoneScheduleRequest
	SetZoneScheduleReply
	Config
*/
package control

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Radiator struct {
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *Radiator) Reset()                    { *m = Radiator{} }
func (m *Radiator) String() string            { return proto.CompactTextString(m) }
func (*Radiator) ProtoMessage()               {}
func (*Radiator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Radiator) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type Schedule struct {
	Interval []*Schedule_Interval `protobuf:"bytes,1,rep,name=interval" json:"interval,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Schedule) GetInterval() []*Schedule_Interval {
	if m != nil {
		return m.Interval
	}
	return nil
}

type Schedule_Time struct {
	Hour   int32 `protobuf:"varint,1,opt,name=hour" json:"hour,omitempty"`
	Minute int32 `protobuf:"varint,2,opt,name=minute" json:"minute,omitempty"`
}

func (m *Schedule_Time) Reset()                    { *m = Schedule_Time{} }
func (m *Schedule_Time) String() string            { return proto.CompactTextString(m) }
func (*Schedule_Time) ProtoMessage()               {}
func (*Schedule_Time) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Schedule_Time) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *Schedule_Time) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

type Schedule_Interval struct {
	Begin             *Schedule_Time `protobuf:"bytes,1,opt,name=begin" json:"begin,omitempty"`
	End               *Schedule_Time `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
	TargetTemperature int32          `protobuf:"varint,3,opt,name=target_temperature,json=targetTemperature" json:"target_temperature,omitempty"`
}

func (m *Schedule_Interval) Reset()                    { *m = Schedule_Interval{} }
func (m *Schedule_Interval) String() string            { return proto.CompactTextString(m) }
func (*Schedule_Interval) ProtoMessage()               {}
func (*Schedule_Interval) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

func (m *Schedule_Interval) GetBegin() *Schedule_Time {
	if m != nil {
		return m.Begin
	}
	return nil
}

func (m *Schedule_Interval) GetEnd() *Schedule_Time {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Schedule_Interval) GetTargetTemperature() int32 {
	if m != nil {
		return m.TargetTemperature
	}
	return 0
}

func init() {
	proto.RegisterType((*Radiator)(nil), "control.Radiator")
	proto.RegisterType((*Schedule)(nil), "control.Schedule")
	proto.RegisterType((*Schedule_Time)(nil), "control.Schedule.Time")
	proto.RegisterType((*Schedule_Interval)(nil), "control.Schedule.Interval")
}

func init() { proto.RegisterFile("control.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x95, 0xa6, 0x7f, 0xa2, 0x2b, 0x0c, 0xdc, 0x50, 0x59, 0x99, 0xaa, 0x8a, 0x21, 0x03,
	0x64, 0x08, 0x12, 0xef, 0xc0, 0x6a, 0xba, 0x23, 0xb7, 0x3e, 0xb5, 0x96, 0x12, 0xbb, 0xba, 0x9e,
	0x79, 0x08, 0x36, 0xde, 0x18, 0xd5, 0x8d, 0x61, 0x40, 0xdd, 0xfc, 0xf9, 0x7e, 0xfe, 0x7d, 0xd6,
	0xc1, 0xfd, 0x3e, 0x78, 0xe1, 0xd0, 0xb7, 0x27, 0x0e, 0x12, 0x70, 0x31, 0xc6, 0xcd, 0x23, 0x54,
	0xda, 0x58, 0x67, 0x24, 0x30, 0x2a, 0x58, 0x18, 0x6b, 0x99, 0xce, 0x67, 0x55, 0xac, 0x8b, 0xe6,
	0x4e, 0xe7, 0xb8, 0xf9, 0x9a, 0x40, 0xf5, 0xbe, 0x3f, 0x92, 0x8d, 0x3d, 0xe1, 0x2b, 0x54, 0xce,
	0x0b, 0xf1, 0xa7, 0xe9, 0x55, 0xb1, 0x2e, 0x9b, 0x65, 0x57, 0xb7, 0xd9, 0x9e, 0xa1, 0xf6, 0x6d,
	0x24, 0xf4, 0x2f, 0x5b, 0x77, 0x30, 0xdd, 0xba, 0x81, 0x10, 0x61, 0x7a, 0x0c, 0x91, 0x53, 0xc7,
	0x4c, 0xa7, 0x33, 0xae, 0x60, 0x3e, 0x38, 0x1f, 0x85, 0xd4, 0x24, 0xdd, 0x8e, 0xa9, 0xfe, 0x2e,
	0xa0, 0xca, 0x2a, 0x7c, 0x82, 0xd9, 0x8e, 0x0e, 0xce, 0xa7, 0x97, 0xcb, 0x6e, 0xf5, 0xbf, 0xf5,
	0xe2, 0xd7, 0x57, 0x08, 0x1b, 0x28, 0xc9, 0xdb, 0xe4, 0xbb, 0xcd, 0x5e, 0x10, 0x7c, 0x06, 0x14,
	0xc3, 0x07, 0x92, 0x0f, 0xa1, 0xe1, 0x44, 0x6c, 0x24, 0x32, 0xa9, 0x32, 0x7d, 0xe4, 0xe1, 0x3a,
	0xd9, 0xfe, 0x0d, 0x76, 0xf3, 0xb4, 0xc2, 0x97, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x28, 0xe6,
	0xfd, 0xcd, 0x53, 0x01, 0x00, 0x00,
}
