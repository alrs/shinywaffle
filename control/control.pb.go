// Code generated by protoc-gen-go. DO NOT EDIT.
// source: control.proto

/*
Package control is a generated protocol buffer package.

It is generated from these files:
	control.proto

It has these top-level messages:
	Radiator
	Sensor
	Schedule
	Room
	Config
*/
package control

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Schedule_Interval_State int32

const (
	Schedule_Interval_UNKNOWN Schedule_Interval_State = 0
	Schedule_Interval_OFF     Schedule_Interval_State = 1
	Schedule_Interval_ON      Schedule_Interval_State = 2
)

var Schedule_Interval_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "OFF",
	2: "ON",
}
var Schedule_Interval_State_value = map[string]int32{
	"UNKNOWN": 0,
	"OFF":     1,
	"ON":      2,
}

func (x Schedule_Interval_State) Enum() *Schedule_Interval_State {
	p := new(Schedule_Interval_State)
	*p = x
	return p
}
func (x Schedule_Interval_State) String() string {
	return proto.EnumName(Schedule_Interval_State_name, int32(x))
}
func (x *Schedule_Interval_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Schedule_Interval_State_value, data, "Schedule_Interval_State")
	if err != nil {
		return err
	}
	*x = Schedule_Interval_State(value)
	return nil
}
func (Schedule_Interval_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 1, 0}
}

type Radiator struct {
	Address          []byte `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Radiator) Reset()                    { *m = Radiator{} }
func (m *Radiator) String() string            { return proto.CompactTextString(m) }
func (*Radiator) ProtoMessage()               {}
func (*Radiator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Radiator) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type Sensor struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Sensor) Reset()                    { *m = Sensor{} }
func (m *Sensor) String() string            { return proto.CompactTextString(m) }
func (*Sensor) ProtoMessage()               {}
func (*Sensor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Schedule struct {
	Interval         []*Schedule_Interval `protobuf:"bytes,1,rep,name=interval" json:"interval,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Schedule) GetInterval() []*Schedule_Interval {
	if m != nil {
		return m.Interval
	}
	return nil
}

type Schedule_Time struct {
	Hour             *int32 `protobuf:"varint,1,opt,name=hour" json:"hour,omitempty"`
	Minute           *int32 `protobuf:"varint,2,opt,name=minute" json:"minute,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Schedule_Time) Reset()                    { *m = Schedule_Time{} }
func (m *Schedule_Time) String() string            { return proto.CompactTextString(m) }
func (*Schedule_Time) ProtoMessage()               {}
func (*Schedule_Time) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *Schedule_Time) GetHour() int32 {
	if m != nil && m.Hour != nil {
		return *m.Hour
	}
	return 0
}

func (m *Schedule_Time) GetMinute() int32 {
	if m != nil && m.Minute != nil {
		return *m.Minute
	}
	return 0
}

type Schedule_Interval struct {
	Begin            *Schedule_Time           `protobuf:"bytes,1,opt,name=begin" json:"begin,omitempty"`
	End              *Schedule_Time           `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
	Type             *Schedule_Interval_State `protobuf:"varint,3,opt,name=type,enum=control.Schedule_Interval_State" json:"type,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Schedule_Interval) Reset()                    { *m = Schedule_Interval{} }
func (m *Schedule_Interval) String() string            { return proto.CompactTextString(m) }
func (*Schedule_Interval) ProtoMessage()               {}
func (*Schedule_Interval) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

func (m *Schedule_Interval) GetBegin() *Schedule_Time {
	if m != nil {
		return m.Begin
	}
	return nil
}

func (m *Schedule_Interval) GetEnd() *Schedule_Time {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Schedule_Interval) GetType() Schedule_Interval_State {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Schedule_Interval_UNKNOWN
}

type Room struct {
	Sensor            *Sensor   `protobuf:"bytes,1,opt,name=sensor" json:"sensor,omitempty"`
	Radiator          *Radiator `protobuf:"bytes,2,opt,name=radiator" json:"radiator,omitempty"`
	Name              *string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	TargetTemperature *int32    `protobuf:"varint,4,opt,name=target_temperature" json:"target_temperature,omitempty"`
	Schedule          *Schedule `protobuf:"bytes,5,opt,name=schedule" json:"schedule,omitempty"`
	XXX_unrecognized  []byte    `json:"-"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Room) GetSensor() *Sensor {
	if m != nil {
		return m.Sensor
	}
	return nil
}

func (m *Room) GetRadiator() *Radiator {
	if m != nil {
		return m.Radiator
	}
	return nil
}

func (m *Room) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Room) GetTargetTemperature() int32 {
	if m != nil && m.TargetTemperature != nil {
		return *m.TargetTemperature
	}
	return 0
}

func (m *Room) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type Config struct {
	Room             []*Room `protobuf:"bytes,1,rep,name=room" json:"room,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Config) GetRoom() []*Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func init() {
	proto.RegisterType((*Radiator)(nil), "control.Radiator")
	proto.RegisterType((*Sensor)(nil), "control.Sensor")
	proto.RegisterType((*Schedule)(nil), "control.Schedule")
	proto.RegisterType((*Schedule_Time)(nil), "control.Schedule.Time")
	proto.RegisterType((*Schedule_Interval)(nil), "control.Schedule.Interval")
	proto.RegisterType((*Room)(nil), "control.Room")
	proto.RegisterType((*Config)(nil), "control.Config")
	proto.RegisterEnum("control.Schedule_Interval_State", Schedule_Interval_State_name, Schedule_Interval_State_value)
}

func init() { proto.RegisterFile("control.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcb, 0x4a, 0xc3, 0x40,
	0x14, 0x86, 0xcd, 0x3d, 0x9e, 0x5e, 0x9d, 0x85, 0x84, 0x74, 0x61, 0x48, 0x2d, 0x74, 0x21, 0x59,
	0xf4, 0x15, 0x84, 0x82, 0x08, 0x29, 0xb4, 0x8a, 0x4b, 0x19, 0x9b, 0x63, 0x1b, 0x68, 0xe6, 0x94,
	0xc9, 0x44, 0xf0, 0x25, 0x7c, 0x01, 0x9f, 0xc1, 0x77, 0x14, 0xc7, 0x49, 0x0b, 0x4a, 0x77, 0x39,
	0xe1, 0x9f, 0xef, 0x7c, 0xf3, 0x0f, 0xf4, 0xd6, 0x24, 0x94, 0xa4, 0x5d, 0xb6, 0x97, 0xa4, 0x88,
	0x05, 0x66, 0x4c, 0x47, 0x10, 0x2e, 0x79, 0x51, 0x72, 0x45, 0x92, 0x0d, 0x20, 0xe0, 0x45, 0x21,
	0xb1, 0xae, 0x23, 0x2b, 0xb1, 0xa6, 0xdd, 0x34, 0x04, 0x7f, 0x85, 0xa2, 0x26, 0x99, 0x7e, 0xd8,
	0x10, 0xae, 0xd6, 0x5b, 0x2c, 0x9a, 0x1d, 0xb2, 0x1b, 0x08, 0x4b, 0xa1, 0x50, 0xbe, 0xf1, 0x5d,
	0x64, 0x25, 0xce, 0xb4, 0x33, 0x8b, 0xb3, 0x16, 0xdf, 0x86, 0xb2, 0x3b, 0x93, 0x88, 0xaf, 0xc1,
	0x7d, 0x28, 0x2b, 0x64, 0x5d, 0x70, 0xb7, 0xd4, 0x48, 0x8d, 0xf6, 0x58, 0x1f, 0xfc, 0xaa, 0x14,
	0x8d, 0xc2, 0xc8, 0xfe, 0x99, 0xe3, 0x2f, 0x0b, 0xc2, 0xf6, 0x08, 0x9b, 0x80, 0xf7, 0x82, 0x9b,
	0x52, 0xe8, 0x6c, 0x67, 0x76, 0xf9, 0x9f, 0xae, 0x89, 0x63, 0x70, 0x50, 0x14, 0x1a, 0x70, 0x3a,
	0x94, 0x81, 0xab, 0xde, 0xf7, 0x18, 0x39, 0x89, 0x35, 0xed, 0xcf, 0x92, 0xd3, 0xa2, 0xd9, 0x4a,
	0x71, 0x85, 0xe9, 0x04, 0x3c, 0xfd, 0xc1, 0x3a, 0x10, 0x3c, 0xe6, 0xf7, 0xf9, 0xe2, 0x29, 0x1f,
	0x9e, 0xb1, 0x00, 0x9c, 0xc5, 0x7c, 0x3e, 0xb4, 0x98, 0x0f, 0xf6, 0x22, 0x1f, 0xda, 0xe9, 0xa7,
	0x05, 0xee, 0x92, 0xa8, 0x62, 0x57, 0xe0, 0xd7, 0xba, 0x23, 0x23, 0x3b, 0x38, 0x6e, 0xd0, 0xbf,
	0xd9, 0x18, 0x42, 0x69, 0x1a, 0x36, 0xaa, 0x17, 0x87, 0xc8, 0xa1, 0xfa, 0x2e, 0xb8, 0x82, 0x57,
	0xbf, 0x96, 0xe7, 0x2c, 0x06, 0xa6, 0xb8, 0xdc, 0xa0, 0x7a, 0x56, 0x58, 0xed, 0x51, 0x72, 0xd5,
	0x48, 0x8c, 0x5c, 0x5d, 0xdc, 0x18, 0xc2, 0xda, 0xa8, 0x47, 0xde, 0x1f, 0x5c, 0x7b, 0xa7, 0x74,
	0x02, 0xfe, 0x2d, 0x89, 0xd7, 0x72, 0xc3, 0x46, 0xe0, 0x4a, 0xa2, 0xca, 0xbc, 0x53, 0xef, 0xb8,
	0x99, 0xa8, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x18, 0x31, 0x70, 0x15, 0x02, 0x00, 0x00,
}
