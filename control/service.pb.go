// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package control

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type HeatingState int32

const (
	HeatingState_UNKNOWN HeatingState = 0
	HeatingState_ON      HeatingState = 1
	HeatingState_OFF     HeatingState = 2
)

var HeatingState_name = map[int32]string{
	0: "UNKNOWN",
	1: "ON",
	2: "OFF",
}
var HeatingState_value = map[string]int32{
	"UNKNOWN": 0,
	"ON":      1,
	"OFF":     2,
}

func (x HeatingState) String() string {
	return proto.EnumName(HeatingState_name, int32(x))
}
func (HeatingState) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type Zone struct {
	Name     string      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Radiator []*Radiator `protobuf:"bytes,2,rep,name=radiator" json:"radiator,omitempty"`
	Schedule *Schedule   `protobuf:"bytes,3,opt,name=schedule" json:"schedule,omitempty"`
}

func (m *Zone) Reset()                    { *m = Zone{} }
func (m *Zone) String() string            { return proto.CompactTextString(m) }
func (*Zone) ProtoMessage()               {}
func (*Zone) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Zone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Zone) GetRadiator() []*Radiator {
	if m != nil {
		return m.Radiator
	}
	return nil
}

func (m *Zone) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type GetZonesRequest struct {
}

func (m *GetZonesRequest) Reset()                    { *m = GetZonesRequest{} }
func (m *GetZonesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetZonesRequest) ProtoMessage()               {}
func (*GetZonesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type GetZonesReply struct {
	Zone []*Zone `protobuf:"bytes,1,rep,name=zone" json:"zone,omitempty"`
}

func (m *GetZonesReply) Reset()                    { *m = GetZonesReply{} }
func (m *GetZonesReply) String() string            { return proto.CompactTextString(m) }
func (*GetZonesReply) ProtoMessage()               {}
func (*GetZonesReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetZonesReply) GetZone() []*Zone {
	if m != nil {
		return m.Zone
	}
	return nil
}

type GetZoneStatusRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetZoneStatusRequest) Reset()                    { *m = GetZoneStatusRequest{} }
func (m *GetZoneStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetZoneStatusRequest) ProtoMessage()               {}
func (*GetZoneStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *GetZoneStatusRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetZoneStatusReply struct {
	Name               string       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TargetTemperature  float32      `protobuf:"fixed32,2,opt,name=target_temperature,json=targetTemperature" json:"target_temperature,omitempty"`
	CurrentTemperature float32      `protobuf:"fixed32,3,opt,name=current_temperature,json=currentTemperature" json:"current_temperature,omitempty"`
	State              HeatingState `protobuf:"varint,4,opt,name=state,enum=control.HeatingState" json:"state,omitempty"`
	Schedule           *Schedule    `protobuf:"bytes,5,opt,name=schedule" json:"schedule,omitempty"`
}

func (m *GetZoneStatusReply) Reset()                    { *m = GetZoneStatusReply{} }
func (m *GetZoneStatusReply) String() string            { return proto.CompactTextString(m) }
func (*GetZoneStatusReply) ProtoMessage()               {}
func (*GetZoneStatusReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *GetZoneStatusReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetZoneStatusReply) GetTargetTemperature() float32 {
	if m != nil {
		return m.TargetTemperature
	}
	return 0
}

func (m *GetZoneStatusReply) GetCurrentTemperature() float32 {
	if m != nil {
		return m.CurrentTemperature
	}
	return 0
}

func (m *GetZoneStatusReply) GetState() HeatingState {
	if m != nil {
		return m.State
	}
	return HeatingState_UNKNOWN
}

func (m *GetZoneStatusReply) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type SetZoneScheduleRequest struct {
	Schedule *Schedule `protobuf:"bytes,1,opt,name=schedule" json:"schedule,omitempty"`
}

func (m *SetZoneScheduleRequest) Reset()                    { *m = SetZoneScheduleRequest{} }
func (m *SetZoneScheduleRequest) String() string            { return proto.CompactTextString(m) }
func (*SetZoneScheduleRequest) ProtoMessage()               {}
func (*SetZoneScheduleRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SetZoneScheduleRequest) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type SetZoneScheduleReply struct {
}

func (m *SetZoneScheduleReply) Reset()                    { *m = SetZoneScheduleReply{} }
func (m *SetZoneScheduleReply) String() string            { return proto.CompactTextString(m) }
func (*SetZoneScheduleReply) ProtoMessage()               {}
func (*SetZoneScheduleReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

type Config struct {
	Zone []*Zone `protobuf:"bytes,1,rep,name=zone" json:"zone,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *Config) GetZone() []*Zone {
	if m != nil {
		return m.Zone
	}
	return nil
}

func init() {
	proto.RegisterType((*Zone)(nil), "control.Zone")
	proto.RegisterType((*GetZonesRequest)(nil), "control.GetZonesRequest")
	proto.RegisterType((*GetZonesReply)(nil), "control.GetZonesReply")
	proto.RegisterType((*GetZoneStatusRequest)(nil), "control.GetZoneStatusRequest")
	proto.RegisterType((*GetZoneStatusReply)(nil), "control.GetZoneStatusReply")
	proto.RegisterType((*SetZoneScheduleRequest)(nil), "control.SetZoneScheduleRequest")
	proto.RegisterType((*SetZoneScheduleReply)(nil), "control.SetZoneScheduleReply")
	proto.RegisterType((*Config)(nil), "control.Config")
	proto.RegisterEnum("control.HeatingState", HeatingState_name, HeatingState_value)
}

func init() { proto.RegisterFile("service.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x41, 0x6f, 0xd3, 0x40,
	0x10, 0x85, 0xbb, 0x4e, 0x9a, 0x94, 0x29, 0xa1, 0xc9, 0xd0, 0x46, 0x56, 0x50, 0x85, 0xf1, 0x29,
	0x6a, 0xa1, 0x48, 0xe1, 0xce, 0xa5, 0x52, 0x8b, 0x84, 0x48, 0xa4, 0x35, 0x08, 0x89, 0x0b, 0x5a,
	0xdc, 0x21, 0x58, 0x72, 0xbd, 0x66, 0xbd, 0x46, 0x94, 0xdf, 0xcb, 0xbf, 0xe0, 0x82, 0xd6, 0x5e,
	0x3b, 0xb1, 0x71, 0x15, 0x6e, 0xd6, 0xbe, 0x6f, 0xdf, 0xcc, 0xbc, 0x1d, 0xc3, 0x28, 0x23, 0xf5,
	0x23, 0x0a, 0xe9, 0x22, 0x55, 0x52, 0x4b, 0x1c, 0x86, 0x32, 0xd1, 0x4a, 0xc6, 0xb3, 0x91, 0xfd,
	0x28, 0xcf, 0xfd, 0x9f, 0xd0, 0xff, 0x24, 0x13, 0x42, 0x84, 0x7e, 0x22, 0x6e, 0xc9, 0x65, 0x1e,
	0x9b, 0x3f, 0xe0, 0xc5, 0x37, 0xbe, 0x80, 0x03, 0x25, 0x6e, 0x22, 0xa1, 0xa5, 0x72, 0x1d, 0xaf,
	0x37, 0x3f, 0x5c, 0x4c, 0x2e, 0xaa, 0xdb, 0xdc, 0x0a, 0xbc, 0x46, 0x0c, 0x9e, 0x85, 0xdf, 0xe8,
	0x26, 0x8f, 0xc9, 0xed, 0x79, 0xac, 0x81, 0x07, 0x56, 0xe0, 0x35, 0xe2, 0x4f, 0xe0, 0xe8, 0x9a,
	0xb4, 0x29, 0x9e, 0x71, 0xfa, 0x9e, 0x53, 0xa6, 0xfd, 0x05, 0x8c, 0x36, 0x47, 0x69, 0x7c, 0x87,
	0xcf, 0xa0, 0xff, 0x4b, 0x26, 0xa6, 0x2b, 0x53, 0x7d, 0x54, 0xdb, 0x19, 0x84, 0x17, 0x92, 0x7f,
	0x06, 0xc7, 0xf6, 0x4e, 0xa0, 0x85, 0xce, 0x2b, 0xaf, 0xae, 0x81, 0xfc, 0xdf, 0x0c, 0xb0, 0x05,
	0x9b, 0x2a, 0xdd, 0xb3, 0xa3, 0x16, 0x6a, 0x4d, 0xfa, 0xb3, 0xa6, 0xdb, 0x94, 0x94, 0xd0, 0xb9,
	0x22, 0xd7, 0xf1, 0xd8, 0xdc, 0xe1, 0x93, 0x52, 0x79, 0xbf, 0x11, 0xf0, 0x25, 0x3c, 0x0e, 0x73,
	0xa5, 0x28, 0x69, 0xf2, 0xbd, 0x82, 0x47, 0x2b, 0x6d, 0x5f, 0x38, 0x87, 0xfd, 0x4c, 0x0b, 0x4d,
	0x6e, 0xdf, 0x63, 0xf3, 0x47, 0x8b, 0x93, 0x7a, 0xb4, 0x37, 0x24, 0x74, 0x94, 0xac, 0x4d, 0x7f,
	0xc4, 0x4b, 0xa6, 0x91, 0xec, 0xfe, 0xee, 0x64, 0xaf, 0x61, 0x1a, 0xd8, 0x29, 0x2b, 0xd1, 0x86,
	0xb2, 0x6d, 0xc4, 0x76, 0x1b, 0x4d, 0xe1, 0xf8, 0x1f, 0xa3, 0x34, 0xbe, 0xf3, 0xcf, 0x61, 0x70,
	0x29, 0x93, 0xaf, 0xd1, 0xfa, 0x3f, 0x1e, 0xe8, 0xec, 0x39, 0x3c, 0xdc, 0x9e, 0x09, 0x0f, 0x61,
	0xf8, 0x61, 0xf9, 0x76, 0xb9, 0xfa, 0xb8, 0x1c, 0xef, 0xe1, 0x00, 0x9c, 0xd5, 0x72, 0xcc, 0x70,
	0x08, 0xbd, 0xd5, 0xd5, 0xd5, 0xd8, 0x59, 0xfc, 0x61, 0x70, 0x62, 0xf1, 0xcb, 0xd2, 0x2b, 0x28,
	0xf7, 0x18, 0x5f, 0xc3, 0x41, 0xb5, 0x1c, 0xe8, 0xd6, 0x85, 0x5a, 0x2b, 0x34, 0x9b, 0x76, 0x28,
	0xa6, 0xe5, 0x3d, 0x7c, 0x57, 0x2f, 0x57, 0xf9, 0xf6, 0x78, 0xda, 0x46, 0x1b, 0x0b, 0x34, 0x7b,
	0x72, 0x9f, 0x5c, 0xda, 0x05, 0x70, 0xd4, 0xca, 0x06, 0x9f, 0x6e, 0xb2, 0xec, 0x8c, 0x7f, 0x76,
	0x7a, 0x3f, 0x50, 0x98, 0x7e, 0x19, 0x14, 0x3f, 0xe5, 0xab, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xa8, 0x31, 0x32, 0xc0, 0xbd, 0x03, 0x00, 0x00,
}
